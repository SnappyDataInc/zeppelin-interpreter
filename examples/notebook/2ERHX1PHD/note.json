{
  "paragraphs": [
    {
      "text": "%angular\n\u003chtml\u003e\n\u003ch3\u003e Objective \u003c/h3\u003e\nRegister external data sets sourced from files hosted on \u003cb\u003eGoogle Cloud Storage(GCS)\u003c/b\u003e.\n\u003ch3\u003e Utils \u003c/h3\u003e\n\u003ca href\u003d\"http://localhost:5050\" target\u003d\"_blank\"\u003eComputeDB Cluster Monitor\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"https://mvnrepository.com/\" target\u003d\"_blank\"\u003eMaven Repository\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"https://spark-packages.org/\" target\u003d\"_blank\"\u003eSpark-Packages.org\u003c/a\u003e\n\u003cbr\u003e\n\u003ch3\u003e Other Data Sources\u003c/h3\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/2EQ7YNQRV\" target\u003d\"_blank\"\u003eLocal Files(LFS)\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/2ENZ8ZCSQ\" target\u003d\"_blank\"\u003eHadoop (HDFS)\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/2ERG19YWQ\" target\u003d\"_blank\"\u003eAmazon S3(AWS)\u003c/a\u003e\n\u003cbr\u003e\n\u003cb\u003e\u003ci\u003eGoogle Cloud(GCS)\u003c/i\u003e\u003c/b\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/2ERR5AP47\" target\u003d\"_blank\"\u003eMicrosoft Azure (ADLS)\u003c/a\u003e\n\n\u003ch3\u003e References \u003c/h3\u003e\n\u003ca href\u003d\"https://tibco-computedb.readthedocs.io/en/enterprise_docv1.1.1/?id\u003d0\" target\u003d\"_blank\"\u003eComputeDB Documentation\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/quickstart\" target\u003d\"_blank\"\u003eQuick Start Notebook\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/snappydata\" target\u003d\"_blank\"\u003eProduct Overview\u003c/a\u003e \n\u003cdiv ng-repeat\u003d\"n in [].constructor(70) track by $index\"\u003e\n    \u003cbr\u003e\n\u003c/div\u003e\n\u003c/html\u003e",
      "user": "anonymous",
      "dateUpdated": "Oct 10, 2019 12:16:02 PM",
      "config": {
        "colWidth": 2.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "ANGULAR",
            "data": "\u003chtml\u003e\n\u003ch3\u003e Objective \u003c/h3\u003e\nRegister external data sets sourced from files hosted on \u003cb\u003eGoogle Cloud Storage(GCS)\u003c/b\u003e.\n\u003ch3\u003e Utils \u003c/h3\u003e\n\u003ca href\u003d\"http://localhost:5050\" target\u003d\"_blank\"\u003eComputeDB Cluster Monitor\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"https://mvnrepository.com/\" target\u003d\"_blank\"\u003eMaven Repository\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"https://spark-packages.org/\" target\u003d\"_blank\"\u003eSpark-Packages.org\u003c/a\u003e\n\u003cbr\u003e\n\u003ch3\u003e Other Data Sources\u003c/h3\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/2EQ7YNQRV\" target\u003d\"_blank\"\u003eLocal Files(LFS)\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/2ENZ8ZCSQ\" target\u003d\"_blank\"\u003eHadoop (HDFS)\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/2ERG19YWQ\" target\u003d\"_blank\"\u003eAmazon S3(AWS)\u003c/a\u003e\n\u003cbr\u003e\n\u003cb\u003e\u003ci\u003eGoogle Cloud(GCS)\u003c/i\u003e\u003c/b\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/2ERR5AP47\" target\u003d\"_blank\"\u003eMicrosoft Azure (ADLS)\u003c/a\u003e\n\n\u003ch3\u003e References \u003c/h3\u003e\n\u003ca href\u003d\"https://tibco-computedb.readthedocs.io/en/enterprise_docv1.1.1/?id\u003d0\" target\u003d\"_blank\"\u003eComputeDB Documentation\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/quickstart\" target\u003d\"_blank\"\u003eQuick Start Notebook\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"http://localhost:8080/#/notebook/snappydata\" target\u003d\"_blank\"\u003eProduct Overview\u003c/a\u003e \n\u003cdiv ng-repeat\u003d\"n in [].constructor(70) track by $index\"\u003e\n    \u003cbr\u003e\n\u003c/div\u003e\n\u003c/html\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1570437014411_1021134535",
      "id": "20191007-140014_20405720",
      "dateCreated": "Oct 7, 2019 2:00:14 PM",
      "dateStarted": "Oct 10, 2019 12:16:02 PM",
      "dateFinished": "Oct 10, 2019 12:16:02 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Prerequisites",
      "text": "%snappydata\nprintln(s\"\"\"%html\n    \u003cul\u003e\n      \u003cb\u003e\u003ci\u003e\n      \u003cli\u003eEnsure the cluster is running using \u003ca href\u003d\"http://localhost:5050\" target\u003d\"_blank\"\u003eComputeDB Cluster Monitor\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003eEnsure you have the necessary access credentials/permissions for data access.\u003c/li\u003e\n      \u003cli\u003ePlease use the clear output button above to flush any information populated in previous runs of the notebook.\u003c/li\u003e\n      \u003c/b\u003e\u003c/i\u003e\u003c/font\u003e\n    \u003c/ul\u003e  \n\"\"\")",
      "user": "anonymous",
      "dateUpdated": "Oct 10, 2019 12:16:04 PM",
      "config": {
        "colWidth": 10.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "    \u003cul\u003e\n      \u003cb\u003e\u003ci\u003e\n      \u003cli\u003eEnsure the cluster is running using \u003ca href\u003d\"http://localhost:5050\" target\u003d\"_blank\"\u003eComputeDB Cluster Monitor\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003eEnsure you have the necessary access credentials/permissions for data access.\u003c/li\u003e\n      \u003cli\u003ePlease use the clear output button above to flush any information populated in previous runs of the notebook.\u003c/li\u003e\n      \u003c/b\u003e\u003c/i\u003e\u003c/font\u003e\n    \u003c/ul\u003e  \n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1570438766061_-258490521",
      "id": "20191007-142926_1363352351",
      "dateCreated": "Oct 7, 2019 2:29:26 PM",
      "dateStarted": "Oct 10, 2019 12:16:04 PM",
      "dateFinished": "Oct 10, 2019 12:16:05 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Step 1 : Select file format of stored data.",
      "text": "%snappydata\n{\n    import org.apache.zeppelin.interpreter.QueryBuilder._\n    val fileFormat \u003d z.select(\"FileFormat\",getFileFormats.toSeq).asInstanceOf[String]\n    z.put(\"dataSource\",gcs)\n    z.put(\"fileFormat\",fileFormat)\n    z.run(\"20191009-093929_214391952\")\n}",
      "user": "anonymous",
      "dateUpdated": "Oct 10, 2019 2:37:34 PM",
      "config": {
        "colWidth": 10.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text",
        "title": true,
        "editorHide": true,
        "runOnSelectionChange": true
      },
      "settings": {
        "params": {
          "FileFormat": "CSV"
        },
        "forms": {
          "FileFormat": {
            "name": "FileFormat",
            "displayName": "FileFormat",
            "type": "select",
            "defaultValue": "",
            "options": [
              {
                "value": "CSV",
                "displayName": "CSV"
              },
              {
                "value": "Parquet",
                "displayName": "Parquet"
              },
              {
                "value": "JSON",
                "displayName": "JSON"
              },
              {
                "value": "ORC",
                "displayName": "ORC"
              },
              {
                "value": "Avro",
                "displayName": "Avro"
              },
              {
                "value": "XML",
                "displayName": "XML"
              },
              {
                "value": "Text",
                "displayName": "Text"
              }
            ],
            "hidden": false
          }
        }
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1570618064609_1607906316",
      "id": "20191009-161744_1674853584",
      "dateCreated": "Oct 9, 2019 4:17:44 PM",
      "dateStarted": "Oct 10, 2019 2:10:51 PM",
      "dateFinished": "Oct 10, 2019 2:10:51 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Step 2 : Deploy Dependencies",
      "text": "%snappydata\n{\n    import org.apache.zeppelin.interpreter.QueryBuilder._\n    val dataSource \u003d z.get(\"dataSource\").asInstanceOf[String]\n    val fileFormat \u003d z.get(\"fileFormat\").asInstanceOf[String]\n    println(\"List of already deployed packages (on fresh installations this list will be empty.)\")\n    val ss \u003d new org.apache.spark.sql.SnappySession(sc)\n    ss.sql(\"list packages\").show(false)\n    \n    printHTML(getDependencyJarNames(dataSource), \"To be deployed from Maven Repository\")\n    printHTML(getDependencyJarNames(fileFormat), \"To be deployed from Spark-packages\")\n    val depsParams \u003d renderDepsUI(dataSource,fileFormat,z)\n    val incompleteDeps \u003d depsParams.filter(_._2.productIterator.map(_.asInstanceOf[String]).contains(\"\"))\n    if(incompleteDeps.keys.size !\u003d 0){\n        printHTML(incompleteDeps.keys.toList.map(x \u003d\u003e s\"\"\"\u003cfont color\u003dblue\u003e\u003ci\u003e$x\u003c/i\u003e\u003c/font\u003e\"\"\"),s\"\"\"Warning : Dependency jar parameter(s) left blank. Ignore if package is already installed on the system.\"\"\")\n        val t \u003d incompleteDeps.keys.toList\n    }else{ \n       depsParams.foreach((t) \u003d\u003e ss.sql(s\"\"\"deploy package ${t._2._1} \u0027${t._2._2}\u0027 path \u0027${t._2._3}\u0027\"\"\"))\n       z.run(\"20191009-094027_2019789823\")\n    }\n}",
      "user": "anonymous",
      "dateUpdated": "Oct 10, 2019 12:16:18 PM",
      "config": {
        "colWidth": 10.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {
          "Name (ex. MyPackage) for gcs-connector-hadoop2-latest.jar": "",
          "Coordinates (groupId:artifactId:version) for gcs-connector-hadoop2-latest.jar": "",
          "Path (location reachable from LeadNode) for gcs-connector-hadoop2-latest.jar": ""
        },
        "forms": {
          "Name (ex. MyPackage) for gcs-connector-hadoop2-latest.jar": {
            "name": "Name (ex. MyPackage) for gcs-connector-hadoop2-latest.jar",
            "displayName": "Name (ex. MyPackage) for gcs-connector-hadoop2-latest.jar",
            "type": "input",
            "defaultValue": "",
            "hidden": false
          },
          "Coordinates (groupId:artifactId:version) for gcs-connector-hadoop2-latest.jar": {
            "name": "Coordinates (groupId:artifactId:version) for gcs-connector-hadoop2-latest.jar",
            "displayName": "Coordinates (groupId:artifactId:version) for gcs-connector-hadoop2-latest.jar",
            "type": "input",
            "defaultValue": "",
            "hidden": false
          },
          "Path (location reachable from LeadNode) for gcs-connector-hadoop2-latest.jar": {
            "name": "Path (location reachable from LeadNode) for gcs-connector-hadoop2-latest.jar",
            "displayName": "Path (location reachable from LeadNode) for gcs-connector-hadoop2-latest.jar",
            "type": "input",
            "defaultValue": "",
            "hidden": false
          }
        }
      },
      "apps": [],
      "jobName": "paragraph_1570594169447_-1386487407",
      "id": "20191009-093929_214391952",
      "dateCreated": "Oct 9, 2019 9:39:29 AM",
      "dateStarted": "Oct 10, 2019 2:10:51 PM",
      "dateFinished": "Oct 10, 2019 2:10:52 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Step 3 : Access credentials and File format parsing options",
      "text": "%snappydata\n{\n    import org.apache.zeppelin.interpreter.QueryBuilder._\n    \n    val dataSource \u003d z.get(\"dataSource\").asInstanceOf[String]\n    val fileFormat \u003d z.get(\"fileFormat\").asInstanceOf[String]\n    val dParams \u003d parseAndRender(getDataSourceParams(dataSource),z)\n    val fParams \u003d parseAndRender(getFileFormatParams(fileFormat),z)\n    configureDataSourceEnvParams(sc,dParams,dataSource)\n    if(verifyParams(dParams,fParams)) {\n        val path \u003d getPathFromParams(dParams,dataSource)\n        printHTML(List(path),\"Path based on provided variables\")\n        z.put(\"dataSourceParams\",dParams)\n        z.put(\"path\",path)\n        z.put(\"fileParams\",fParams)\n    }\n}",
      "user": "anonymous",
      "dateUpdated": "Oct 10, 2019 12:16:44 PM",
      "config": {
        "colWidth": 10.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text",
        "title": true,
        "editorHide": true,
        "runOnSelectionChange": true
      },
      "settings": {
        "params": {
          "GCS Project ID": "",
          "Path of Key File": "",
          "GCS Bucket Name": "",
          "File path in the GCS bucket": "",
          "Encoding CSV": "",
          "Delimiter in CSV": "",
          "Header present in CSV": "",
          "Infer Schema from CSV": "",
          "Mode for bad records in CSV": "",
          "HDFS Name node": "",
          "Path of file in HDFS ": ""
        },
        "forms": {
          "GCS Project ID": {
            "name": "GCS Project ID",
            "displayName": "GCS Project ID",
            "type": "input",
            "defaultValue": "",
            "hidden": false
          },
          "Path of Key File": {
            "name": "Path of Key File",
            "displayName": "Path of Key File",
            "type": "input",
            "defaultValue": "",
            "hidden": false
          },
          "GCS Bucket Name": {
            "name": "GCS Bucket Name",
            "displayName": "GCS Bucket Name",
            "type": "input",
            "defaultValue": "",
            "hidden": false
          },
          "File path in the GCS bucket": {
            "name": "File path in the GCS bucket",
            "displayName": "File path in the GCS bucket",
            "type": "input",
            "defaultValue": "",
            "hidden": false
          },
          "Encoding CSV": {
            "name": "Encoding CSV",
            "displayName": "Encoding CSV",
            "type": "input",
            "defaultValue": "",
            "hidden": false
          },
          "Delimiter in CSV": {
            "name": "Delimiter in CSV",
            "displayName": "Delimiter in CSV",
            "type": "input",
            "defaultValue": "",
            "hidden": false
          },
          "Header present in CSV": {
            "name": "Header present in CSV",
            "displayName": "Header present in CSV",
            "type": "select",
            "defaultValue": "",
            "options": [
              {
                "value": "true",
                "displayName": "true"
              },
              {
                "value": "false",
                "displayName": "false"
              }
            ],
            "hidden": false
          },
          "Infer Schema from CSV": {
            "name": "Infer Schema from CSV",
            "displayName": "Infer Schema from CSV",
            "type": "select",
            "defaultValue": "",
            "options": [
              {
                "value": "true",
                "displayName": "true"
              },
              {
                "value": "false",
                "displayName": "false"
              }
            ],
            "hidden": false
          },
          "Mode for bad records in CSV": {
            "name": "Mode for bad records in CSV",
            "displayName": "Mode for bad records in CSV",
            "type": "select",
            "defaultValue": "",
            "options": [
              {
                "value": "DROPMALFORMED",
                "displayName": "DROPMALFORMED"
              },
              {
                "value": "FAILFAST",
                "displayName": "FAILFAST"
              }
            ],
            "hidden": false
          }
        }
      },
      "apps": [],
      "jobName": "paragraph_1570594227372_1083893335",
      "id": "20191009-094027_2019789823",
      "dateCreated": "Oct 9, 2019 9:40:27 AM",
      "dateStarted": "Oct 10, 2019 12:16:44 PM",
      "dateFinished": "Oct 10, 2019 12:16:44 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Step 4 : Register External Table in catalog",
      "text": "%snappydata\n{\n    import org.apache.zeppelin.interpreter.QueryBuilder._\n    \n    val datasetName \u003d z.input(\"Dataset name\").asInstanceOf[String]\n    if(datasetName.length \u003d\u003d 0 ){\n        printHTML(List(\"Please provide name of the dataset to create the extenal table.\"),\"Warning\")\n    }else{\n       createExternalTable(sc,z,datasetName)\n       //Clean all variables\n       z.remove(\"dataSource\")\n       z.remove(\"fileFormat\")\n       z.remove(\"dataSourceParams\")\n       z.remove(\"path\")\n       z.remove(\"fileParams\")\n    }\n}",
      "user": "anonymous",
      "dateUpdated": "Oct 10, 2019 2:37:19 PM",
      "config": {
        "colWidth": 10.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1570594306021_-1167364424",
      "id": "20191009-094146_779686640",
      "dateCreated": "Oct 9, 2019 9:41:46 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "ExternalDataSources/GCS",
  "id": "2ERHX1PHD",
  "angularObjects": {
    "2EQTYE6MH:shared_process": [],
    "2EF2JFWKS:existing_process": [],
    "2EMUFVMUE:shared_process": [],
    "2EJMGJ8YD:shared_process": []
  },
  "config": {},
  "info": {}
}