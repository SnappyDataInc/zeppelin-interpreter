{"paragraphs":[{"title":"STEP I: Register the dataset using below MySQL access options","text":"%snappydata\n{\nval datasetName = z.input(\"Enter Name for the Dataset:\", \"AirlineRef\").asInstanceOf[String]\nval url = z.input(\"Enter JDBC URL for MySQL:\", \"jdbc:mysql://localhost/\")\nval database = z.input(\"Enter Database Name:\", \"my-database\").asInstanceOf[String]\nval mySqlTable = z.input(\"Enter Table Name:\", \"AirlineDataWithRowID\")\nval user = z.input(\"Enter User:\", \"my-user\")\nval password = z.input(\"Enter Password:\", \"my-password\")\nz.put(\"mySqlTable\", mySqlTable)\nz.put(\"datasetName\", datasetName)\n\nval urlWithDB = url + database\n\nz.put(\"urlWithDB\",urlWithDB)\nz.put(\"user\" ,user)\nz.put(\"password\",password)\n\nvar connectionString =s\"create external table $datasetName using JDBC options (url '$urlWithDB', dbtable '$mySqlTable', user '$user', password '$password', driver 'com.mysql.jdbc.Driver'\"\nz.put(\"connectionString\",connectionString)\n}\n","user":"anonymous","dateUpdated":"2018-10-11T12:35:16+0530","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","title":true,"results":{},"enabled":true,"editorHide":true,"tableHide":false},"settings":{"params":{"Name the dataset being created:":"db4","JDBC URL for MySQL:":"jdbc:mysql://localhost:3306/","Database:":"info1","Table:":"emp","User:":"root","password:":"vk@18","JDBC URL for Postgres:":"jdbc:mysql://localhost/","Password:":"my-password","Enter name for the dataset being created:":"df3","Enter JDBC URL for Postgres:":"jdbc:mysql://localhost/","Enter Database Name:":"info1","Enter Table Name:":"emp","Enter User:":"root","Enter Password:":"vk@18","Enter Name for the Dataset:":"df9","Enter JDBC URL for Mysql:":"jdbc:mysql://localhost/","Enter JDBC URL for MySQL:":"jdbc:mysql://localhost/"},"forms":{"Enter Name for the Dataset:":{"name":"Enter Name for the Dataset:","displayName":"Enter Name for the Dataset:","type":"input","defaultValue":"AirlineRef","hidden":false,"$$hashKey":"object:7317"},"Enter JDBC URL for MySQL:":{"name":"Enter JDBC URL for MySQL:","displayName":"Enter JDBC URL for MySQL:","type":"input","defaultValue":"jdbc:mysql://localhost/","hidden":false,"$$hashKey":"object:7318"},"Enter Database Name:":{"name":"Enter Database Name:","displayName":"Enter Database Name:","type":"input","defaultValue":"my-database","hidden":false,"$$hashKey":"object:7319"},"Enter Table Name:":{"name":"Enter Table Name:","displayName":"Enter Table Name:","type":"input","defaultValue":"AirlineDataWithRowID","hidden":false,"$$hashKey":"object:7320"},"Enter User:":{"name":"Enter User:","displayName":"Enter User:","type":"input","defaultValue":"my-user","hidden":false,"$$hashKey":"object:7321"},"Enter Password:":{"name":"Enter Password:","displayName":"Enter Password:","type":"input","defaultValue":"my-password","hidden":false,"$$hashKey":"object:7322"}}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1536573340114_-459408495","id":"20180612-104002_1007541269","dateCreated":"2018-09-10T15:25:40+0530","dateStarted":"2018-10-11T12:35:16+0530","dateFinished":"2018-10-11T12:35:27+0530","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7185"},{"title":"STEP II: Enter additional parameters here...","text":"%snappydata\n{ \nvar flag:Boolean=false\nvar key:String=\" \"\nvar value:String=\" \"\nvar map1:Map[String,String] = Map()\nval datasetName =z.get(\"datasetName\").asInstanceOf[String]\nval mySqlTable=z.get(\"mySqlTable\").asInstanceOf[String]\nval user=z.get(\"user\").asInstanceOf[String]\nval password=z.get(\"password\").asInstanceOf[String]\nval urlWithDB=z.get(\"urlWithDB\").asInstanceOf[String]\nval ss = new org.apache.spark.sql.SnappySession(snc.sparkContext)\nval parameterString = z.input(\"Enter optional parameters in the form of <key>=<value> separated by comma (,)\", \"\").asInstanceOf[String]\n\nif(parameterString != \"\"){\nfor (returnValue <- parameterString.split(\",\"))\n{\n  for(ret <- returnValue.split(\"=\"))\n    {\n      if(flag==false)\n      {\n        key=ret\n        \n        flag=true\n      }\n      else\n      {\n        value=ret\n        flag=false\n       }\n    }\n map1 += key -> value\n }\n    var stringToConcat = \"\"\n    map1.keys.foreach{ j =>\n    var temp=j\n    var temp2=map1(j)\n     stringToConcat += \",\"+temp+\" \"+\"'\"+temp2+\"'\"\n    }\n     \n\nss.sql(s\"drop table if exists $datasetName\")\n\nval connectionString=z.get(\"connectionString\").asInstanceOf[String]\nval connectionString2=connectionString.concat(stringToConcat)\nval finalConnectionString=connectionString2.concat(\")\")\nss.sql(finalConnectionString)\n\n}\nelse{\n println(\"No extra parameters added.\")\n ss.sql(s\"drop table if exists $datasetName\")\n ss.sql(s\"create external table $datasetName using JDBC options (url '$urlWithDB', dbtable '$mySqlTable', user '$user', password '$password', driver 'com.mysql.jdbc.Driver')\")\n}\nprintln\nprintln(s\"External table named $datasetName registered.\")\nprintln(s\"====== Schema for $datasetName ======\")\nss.table(datasetName).printSchema\n}\n\n\n","user":"anonymous","dateUpdated":"2018-10-11T12:37:05+0530","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","editorHide":false,"tableHide":false,"title":true},"settings":{"params":{"Give list of parameters:":" ","Enter optional parameters in the form of <key>=<value> separated by comma (,)":"port=3306"},"forms":{"Enter optional parameters in the form of <key>=<value> separated by comma (,)":{"name":"Enter optional parameters in the form of <key>=<value> separated by comma (,)","displayName":"Enter optional parameters in the form of <key>=<value> separated by comma (,)","type":"input","defaultValue":"","hidden":false,"$$hashKey":"object:7396"}}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure\n\nLast packet sent to the server was 0 ms ago.\n  at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n  at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n  at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n  at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)\n  at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)\n  at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)\n  at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)\n  at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)\n  at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n  at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n  at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n  at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)\n  at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)\n  at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)\n  at org.apache.spark.sql.execution.datasources.jdbc.DriverWrapper.connect(DriverWrapper.scala:45)\n  at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$$anonfun$createConnectionFactory$1.apply(JdbcUtils.scala:59)\n  at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$$anonfun$createConnectionFactory$1.apply(JdbcUtils.scala:50)\n  at org.apache.spark.sql.execution.datasources.jdbc.JDBCRDD$.resolveTable(JDBCRDD.scala:58)\n  at org.apache.spark.sql.execution.datasources.jdbc.JDBCRelation.<init>(JDBCRelation.scala:113)\n  at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:45)\n  at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:330)\n  at org.apache.spark.sql.SnappySession.createTable(SnappySession.scala:1092)\n  at org.apache.spark.sql.SnappySession.createTable(SnappySession.scala:1029)\n  at org.apache.spark.sql.execution.CreateMetastoreTableUsing.run(ddl.scala:52)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:58)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:56)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.doExecute(commands.scala:74)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:114)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:114)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:135)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:132)\n  at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:113)\n  at org.apache.spark.sql.execution.CodegenSparkFallback$$anonfun$doExecute$1.apply(CodegenSparkFallback.scala:105)\n  at org.apache.spark.sql.execution.CodegenSparkFallback$$anonfun$doExecute$1.apply(CodegenSparkFallback.scala:105)\n  at org.apache.spark.sql.execution.CodegenSparkFallback.executeWithFallback(CodegenSparkFallback.scala:72)\n  at org.apache.spark.sql.execution.CodegenSparkFallback.doExecute(CodegenSparkFallback.scala:105)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:114)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:114)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:135)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:132)\n  at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:113)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:92)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:92)\n  at org.apache.spark.sql.SnappySession$.evaluatePlan(SnappySession.scala:2117)\n  at org.apache.spark.sql.SnappySession$.sqlPlan(SnappySession.scala:2219)\n  at org.apache.spark.sql.SnappySession$$anonfun$sql$1.apply(SnappySession.scala:202)\n  at org.apache.spark.sql.SnappySession$$anonfun$sql$1.apply(SnappySession.scala:202)\n  at org.apache.spark.sql.execution.SnappyContextAQPFunctions.sql(SnappyContextAQPFunctions.scala:464)\n  at org.apache.spark.sql.SnappySession.sql(SnappySession.scala:202)\n  ... 44 elided\nCaused by: java.net.ConnectException: Connection refused (Connection refused)\n  at java.net.PlainSocketImpl.socketConnect(Native Method)\n  at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n  at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n  at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n  at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n  at java.net.Socket.connect(Socket.java:589)\n  at java.net.Socket.connect(Socket.java:538)\n  at java.net.Socket.<init>(Socket.java:434)\n  at java.net.Socket.<init>(Socket.java:244)\n  at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)\n  at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)\n  at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)\n  ... 90 more\n"}]},"apps":[],"jobName":"paragraph_1537857102574_-933982830","id":"20180925-120142_920418608","dateCreated":"2018-09-25T12:01:42+0530","dateStarted":"2018-10-10T13:20:35+0530","dateFinished":"2018-10-10T13:20:39+0530","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:7186"},{"title":"STEP III: Lets take a look at some sample data","text":"%snappydata\nprintln(s\"\"\"%html\n<p>Records from the dataset Created</p>\"\"\")\nval dfm=z.get(\"datasetName\").asInstanceOf[String]\nval dfs = snc.table(dfm)\nz.show(dfs)","user":"anonymous","dateUpdated":"2018-10-09T23:51:36+0530","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","title":true,"results":{},"enabled":true,"editorHide":true},"settings":{"params":{},"forms":{}},"results":"org.apache.thrift.transport.TTransportException: java.net.SocketException: Broken pipe (Write failed)","apps":[],"jobName":"paragraph_1536573340115_-459793244","id":"20180612-105322_489570796","dateCreated":"2018-09-10T15:25:40+0530","dateStarted":"2018-10-09T23:51:36+0530","dateFinished":"2018-10-09T23:51:36+0530","status":"ERROR","errorMessage":"java.net.SocketException: Broken pipe (Write failed)\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:155)\n\tat java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)\n\tat java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)\n\tat org.apache.thrift.transport.TIOStreamTransport.flush(TIOStreamTransport.java:159)\n\tat org.apache.thrift.TServiceClient.sendBase(TServiceClient.java:65)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.send_interpret(RemoteInterpreterService.java:260)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.interpret(RemoteInterpreterService.java:249)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:373)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:97)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:406)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:175)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:329)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n","progressUpdateIntervalMs":500,"$$hashKey":"object:7187"},{"title":"STEP IV: Cache the data in SnappyData Column/Row table","text":"%snappydata\n{\nimport org.apache.spark.sql.SnappySession\n\nval ss = new SnappySession(snc.sparkContext)\n\nval datasetName = z.get(\"datasetName\")\nval tabName = datasetName+ \"_cache\"\n\nval tableType = z.input(\"SnappyData Table type\", \"column\")\n\nss.sql(s\"drop table if exists $tabName\")\nss.sql(s\"create table $tabName using $tableType as select * from $datasetName\" )\n\nprintln(s\"Created table named $tabName\")\nprintln(\"With row count = \" + ss.table(s\"$tabName\").count )\n}","user":"anonymous","dateUpdated":"2018-10-05T10:49:20+0530","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","title":true,"results":{},"enabled":true,"editorHide":true,"tableHide":false},"settings":{"params":{"SnappyData Table type":"column"},"forms":{"SnappyData Table type":{"name":"SnappyData Table type","displayName":"SnappyData Table type","type":"input","defaultValue":"column","hidden":false,"$$hashKey":"object:7474"}}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Created table named df9_cache\nWith row count = 5\n"}]},"apps":[],"jobName":"paragraph_1536573340115_-459793244","id":"20180612-110449_1554543799","dateCreated":"2018-09-10T15:25:40+0530","dateStarted":"2018-10-05T10:49:20+0530","dateFinished":"2018-10-05T10:49:32+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7188"},{"text":"%snappydata\n","dateUpdated":"2018-09-27T13:00:59+0530","config":{"colWidth":12,"editorMode":"ace/mode/text","results":{},"enabled":true,"editorSetting":{"language":"text","editOnDblClick":false},"editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536573340116_-461716988","id":"20180612-110838_1692281920","dateCreated":"2018-09-10T15:25:40+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7189"}],"name":"/data-sources/MySQL","id":"2DPA2GZ7F","angularObjects":{"2DVCCD1HB:shared_process":[],"2DUWTCRCE:shared_process":[],"2DSJVNUZ4:shared_process":[],"2DRTGSZDH:shared_process":[],"2DTSY8F4K:existing_process":[],"2DUG15QFX:shared_process":[],"2DT1MSVXR:shared_process":[],"2DTZU52BJ:shared_process":[],"2DUDZ18JN:shared_process":[],"2DRUE5Y7F:shared_process":[],"2DTW97ZMS:shared_process":[],"2DV8HEQ23:shared_process":[],"2DRZEUU18:shared_process":[],"2DUYZKKZQ:shared_process":[],"2DV9PT6SU:shared_process":[],"2DUYQS9YB:shared_process":[],"2DSY63EG8:shared_process":[],"2DSM33QMM:shared_process":[],"2DV48T9P4:shared_process":[],"2DUGW2ZFP:shared_process":[],"2DRE2WNK1:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}