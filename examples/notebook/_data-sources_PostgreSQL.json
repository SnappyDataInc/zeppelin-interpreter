{"paragraphs":[{"title":"STEP I: Register the dataset using below PostgresSQL access options","text":"%snappydata\n\n// this curly brackets around block of code prevents all the REPL output from being displayed ...\n{\nval datasetName = z.input(\"Enter Name for the Dataset:\", \"AirlineRef\").asInstanceOf[String]\nval url = z.input(\"Enter JDBC URL for Postgres:\", \"jdbc:postgresql://localhost:5432/\")\nval database = z.input(\"Enter Database Name:\", \"postgres\").asInstanceOf[String]\nval pgTable = z.input(\"Enter Table Name:\", \"AirlineDataWithRowID\")\nval user = z.input(\"Enter Username:\", \"postgres\")\nval password = z.input(\"Enter Password:\", \"postgres\")\n\nz.put(\"pgTable\", pgTable)\nz.put(\"datasetName\", datasetName)\nval urlWithDB = url + database\nz.put(\"urlWithDB\",urlWithDB)\nz.put(\"user\" ,user)\nz.put(\"password\",password)\n\nvar connectionString =s\"create external table $datasetName using JDBC options (url '$urlWithDB', dbtable '$pgTable', user '$user', password '$password', driver 'org.postgresql.Driver'\"\nz.put(\"connectionString\",connectionString)\n}","user":"anonymous","dateUpdated":"2018-10-12T15:33:01+0530","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{"Name the dataset being created:":"AirlineRef","JDBC URL for Postgres:":"jdbc:postgresql://localhost:5432/","Database:":"mydb","Table:":"company","User:":"user1","password:":"vk@18","Enter Name for the Dataset:":"ds_postgres","Enter JDBC URL for Postgres:":"jdbc:postgresql://localhost:5432/","Enter Database Name:":"mydb","Enter Table Name:":"company","Enter User:":"user1","Enter Password:":"vk@18","Enter Username:":"user1"},"forms":{"Enter Name for the Dataset:":{"name":"Enter Name for the Dataset:","displayName":"Enter Name for the Dataset:","type":"input","defaultValue":"AirlineRef","hidden":false,"$$hashKey":"object:13311"},"Enter JDBC URL for Postgres:":{"name":"Enter JDBC URL for Postgres:","displayName":"Enter JDBC URL for Postgres:","type":"input","defaultValue":"jdbc:postgresql://localhost:5432/","hidden":false,"$$hashKey":"object:13312"},"Enter Database Name:":{"name":"Enter Database Name:","displayName":"Enter Database Name:","type":"input","defaultValue":"postgres","hidden":false,"$$hashKey":"object:13313"},"Enter Table Name:":{"name":"Enter Table Name:","displayName":"Enter Table Name:","type":"input","defaultValue":"AirlineDataWithRowID","hidden":false,"$$hashKey":"object:13314"},"Enter Username:":{"name":"Enter Username:","displayName":"Enter Username:","type":"input","defaultValue":"postgres","hidden":false,"$$hashKey":"object:13315"},"Enter Password:":{"name":"Enter Password:","displayName":"Enter Password:","type":"input","defaultValue":"postgres","hidden":false,"$$hashKey":"object:13316"}}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1536573348297_673307591","id":"20180608-100349_873142141","dateCreated":"2018-09-10T15:25:48+0530","dateStarted":"2018-09-27T16:07:56+0530","dateFinished":"2018-09-27T16:07:57+0530","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:12853"},{"title":"STEP II :Enter additional parameters here... ","text":"%snappydata\n{  \nvar flag:Boolean=false\nvar key:String=\" \"\nvar value:String=\" \"\nval ss = new org.apache.spark.sql.SnappySession(snc.sparkContext)\nval datasetName =z.get(\"datasetName\").asInstanceOf[String]\nval pgTable=z.get(\"pgTable\").asInstanceOf[String]\nval user=z.get(\"user\").asInstanceOf[String]\nval password=z.get(\"password\").asInstanceOf[String]\nval urlWithDB=z.get(\"urlWithDB\").asInstanceOf[String]\nvar map1:Map[String,String] = Map()\nval parameterString = z.input(\"Enter optional parameters in the form of <key>=<value> separated by comma (,)\", \"\").asInstanceOf[String]\n\nif(parameterString != \"\"){\nfor (returnValue <- parameterString.split(\",\"))\n{\n  for(ret <- returnValue.split(\"=\"))\n    {\n      if(flag==false)\n      {\n        key=ret\n        flag=true\n      }\n      else\n      {\n        value=ret\n        flag=false\n       }\n    }\n map1 += key -> value\n }\n    var stringToConcat = \"\"\n    map1.keys.foreach{ j =>\n    var temp=j\n    var temp2=map1(j)\n     stringToConcat += \",\"+temp+\" \"+\"'\"+temp2+\"'\"\n    }\n   \nval ss = new org.apache.spark.sql.SnappySession(snc.sparkContext)\nss.sql(s\"drop table if exists $datasetName\")\n\nval connectionString=z.get(\"connectionString\").asInstanceOf[String]\nval connectionString2=connectionString.concat(stringToConcat)\nval finalConnectionString=connectionString2.concat(\")\")\nss.sql(finalConnectionString)\n\n}\nelse{\n println(\"No extra parameter added\")\n ss.sql(s\"drop table if exists $datasetName\")\n ss.sql(s\"create external table $datasetName using JDBC options (url '$urlWithDB', dbtable '$pgTable', user '$user', password '$password', driver 'org.postgresql.Driver')\")\n}\nprintln\nprintln(s\"External table named $datasetName registered.\")\nprintln(s\"====== Schema for $datasetName ======\")\nss.table(datasetName).printSchema\n\n}\n","user":"anonymous","dateUpdated":"2018-09-28T12:30:05+0530","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","title":true,"tableHide":false,"editorHide":true},"settings":{"params":{"Give list of parameters:":"port=5432","Enter optional parameters in the form of <key>=<value> separated by comma (,)":""},"forms":{"Enter optional parameters in the form of <key>=<value> separated by comma (,)":{"name":"Enter optional parameters in the form of <key>=<value> separated by comma (,)","displayName":"Enter optional parameters in the form of <key>=<value> separated by comma (,)","type":"input","defaultValue":"","hidden":false,"$$hashKey":"object:13066"}}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"No extra parameter added\n\nExternal table named ds_postgres registered.\n====== Schema for ds_postgres ======\nroot\n |-- id: integer (nullable = false)\n |-- name: string (nullable = false)\n |-- age: integer (nullable = false)\n |-- address: string (nullable = true)\n |-- salary: float (nullable = true)\n |-- join_date: date (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1537861778928_608721221","id":"20180925-131938_2102236282","dateCreated":"2018-09-25T13:19:38+0530","dateStarted":"2018-09-27T16:08:00+0530","dateFinished":"2018-09-27T16:08:01+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12854"},{"title":"STEP III : Lets take a look at some sample data","text":"%snappydata\nprintln(s\"\"\"%html\n<p>Records from the dataset Created</p>\"\"\")\nval dfm=z.get(\"datasetName\").asInstanceOf[String]\nval dfs = snc.table(dfm)\nz.show(dfs)\n\n","user":"anonymous","dateUpdated":"2018-09-27T14:44:09+0530","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Records from the dataset Created</p>\ndfm: String = ds_postgres\ndfs: org.apache.spark.sql.DataFrame = [id: int, name: string ... 4 more fields]\n"},{"type":"TABLE","data":"id\tname\tage\taddress\tsalary\tjoin_date\n1\tPaul\t32\tCalifornia                                        \t20000.0\t2001-07-13\n2\tAllen\t25\tTexas                                             \tnull\t2007-12-13\n3\tTeddy\t23\tNorway                                            \t20000.0\tnull\n4\tMark\t25\tRich-Mond                                         \t65000.0\t2007-12-13\n5\tDavid\t27\tTexas                                             \t85000.0\t2007-12-13\n"}]},"apps":[],"jobName":"paragraph_1536573348298_674461838","id":"20180608-112403_907103821","dateCreated":"2018-09-10T15:25:48+0530","dateStarted":"2018-09-27T14:43:51+0530","dateFinished":"2018-09-27T14:43:52+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12855"},{"title":"STEP IV: Cache the data in SnappyData Column/Row table","text":"%snappydata\n{\nimport org.apache.spark.sql.SnappySession\n\nval ss = new SnappySession(snc.sparkContext)\n\nval datasetName = z.get(\"datasetName\")\nval tabName = datasetName+ \"_cache\"\n\nval tableType = z.input(\"SnappyData Table type\", \"column\")\n\nss.sql(s\"drop table if exists $tabName\")\nss.sql(s\"create table $tabName using $tableType as select * from $datasetName\" )\n\nprintln(s\"Created table named $tabName\")\nprintln(\"With row count = \" + ss.table(s\"$tabName\").count )\n}\n","user":"anonymous","dateUpdated":"2018-09-27T14:44:12+0530","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","title":true,"results":{},"enabled":true,"editorHide":true},"settings":{"params":{"SnappyData Table type":"column"},"forms":{"SnappyData Table type":{"name":"SnappyData Table type","displayName":"SnappyData Table type","type":"input","defaultValue":"column","hidden":false,"$$hashKey":"object:13194"}}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Created table named AirlineRef_cache\nWith row count = 5\n"}]},"apps":[],"jobName":"paragraph_1536573348299_674077089","id":"20180608-114350_1068658038","dateCreated":"2018-09-10T15:25:48+0530","dateStarted":"2018-09-27T11:14:02+0530","dateFinished":"2018-09-27T11:14:05+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12856"},{"text":"%snappydata\n","dateUpdated":"2018-09-10T15:25:48+0530","config":{"colWidth":12,"editorMode":"ace/mode/text","results":{},"enabled":true,"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1536573348299_674077089","id":"20180612-105646_584803602","dateCreated":"2018-09-10T15:25:48+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12857"}],"name":"/data-sources/PostgreSQL","id":"2DPWUUERG","angularObjects":{"2DSMV34N1:shared_process":[],"2DQ8QQ5EY:shared_process":[],"2DP4GUXVM:shared_process":[],"2DP8CFGHC:shared_process":[],"2DPDYBHCB:shared_process":[],"2DRSSH3Q8:shared_process":[],"2DPDH4P21:shared_process":[],"2DQBW5YH3:shared_process":[],"2DRXW65M5:shared_process":[],"2DPDR7CPV:shared_process":[],"2DSR6B4QF:shared_process":[],"2DPHNKBTR:shared_process":[],"2DPDAV3XB:shared_process":[],"2DQEHKQBH:shared_process":[],"2DQ9UUX4S:existing_process":[],"2DQ1FYK4A:shared_process":[],"2DRUTTS6G:shared_process":[],"2DSE9Y3YC:shared_process":[],"2DSM1NJVU:shared_process":[],"2DS3ZGH9R:shared_process":[],"2DR9PEVMA:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}