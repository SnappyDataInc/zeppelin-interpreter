{"paragraphs":[{"text":"%snappydata\n\nprintln(\"%html <h3> Specify Dataset name(registered as External table), along with cassandra Host, port, keyspace, table to read from </h3>\")\nprintln(\"%html <h4> <a href='https://github.com/datastax/spark-cassandra-connector/blob/master/doc/1_connecting.md' target='_blank'>Read description of all config options</a> </h4>\")\n","user":"anonymous","dateUpdated":"2018-05-26T03:05:10+0000","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3> Specify Dataset name(registered as External table), along with cassandra Host, port, keyspace, table to read from </h3>\n"},{"type":"HTML","data":"<h4> <a href='https://github.com/datastax/spark-cassandra-connector/blob/master/doc/1_connecting.md' target='_blank'>Read description of all config options</a> </h4>\n"}]},"apps":[],"jobName":"paragraph_1527105250377_1270931433","id":"20180523-005307_463881908","dateCreated":"2018-05-23T19:54:10+0000","dateStarted":"2018-05-24T00:05:35+0000","dateFinished":"2018-05-24T00:05:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3657"},{"title":"STEP 1: Register the dataset using below Cassandra access options","text":"%snappydata\n\n// this curly brackets around block of code prevents all the REPL output from being displayed ...\n{\nimport com.datastax.spark.connector._\nimport org.apache.spark.sql.cassandra._\nimport com.datastax.spark.connector.cql.CassandraConnectorConf\nimport org.apache.spark.sql.SnappySession\n\nval datasetName = z.input(\"Name the dataset being created:\", \"Invalid-Name\").asInstanceOf[String]\nval host = z.input(\"Any one Cassandra host IP/Name:\", \"cassandra\")\nval port = z.input(\"Port:\", \"7077\")\nval keyspace = z.input(\"Keyspace:\", \"test\")\nval table = z.input(\"Cassandra tableName:\", \"airlineref\")\n//TODO: Several other important options to be added later ....\n\nz.put(\"datasetName\", datasetName)\nz.put(\"host\", host)\nz.put(\"port\", port)\n\nval ss = new SnappySession(snc.sparkContext)\nss.setCassandraConf(\"Cluster1\", CassandraConnectorConf.ConnectionHostParam.option(s\"$host\"))  // Assuming default port\n\nss.sql(s\"drop table if exists $datasetName\")\n//println(s\"create DDL: create external table $datasetName using org.apache.spark.sql.cassandra options ...\")\nss.sql(s\"create external table $datasetName using org.apache.spark.sql.cassandra options (table '$table', keyspace '$keyspace', cluster 'Cluster1')\" )\n\n//val df = ss.read.format(\"org.apache.spark.sql.cassandra\").options(Map( \"table\" -> \"airlineref\", \"keyspace\" -> \"test\", \"cluster\" -> \"Cluster1\" )).load()\n//df.show\n\nprintln\nprintln(s\"External table named $datasetName registered.\")\nprintln\nprintln(s\"====== Schema Inferred for $datasetName ======\")\nss.table(datasetName).printSchema\nprintln(s\"====== Schema for $datasetName ======\")\n\n}\n","user":"anonymous","dateUpdated":"2018-05-26T03:05:17+0000","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{"Name the dataset being created:":"AirlineCode","URI:":"mongodb://mongodb-mongodb","Database:":"testdb","Collection:":"airlineRef","Sample size (schema inference):":"1000","Partitioner:":"MongoDefaultPartitioner","Any one Cassandra host IP/Name:":"cassandra","Port:":"7077","Keyspace:":"test","Cassandra tableName:":"airlineref"},"forms":{"Name the dataset being created:":{"name":"Name the dataset being created:","displayName":"Name the dataset being created:","type":"input","defaultValue":"Invalid-Name","hidden":false,"$$hashKey":"object:3886"},"Any one Cassandra host IP/Name:":{"name":"Any one Cassandra host IP/Name:","displayName":"Any one Cassandra host IP/Name:","type":"input","defaultValue":"cassandra","hidden":false,"$$hashKey":"object:3887"},"Port:":{"name":"Port:","displayName":"Port:","type":"input","defaultValue":"7077","hidden":false,"$$hashKey":"object:3888"},"Keyspace:":{"name":"Keyspace:","displayName":"Keyspace:","type":"input","defaultValue":"test","hidden":false,"$$hashKey":"object:3889"},"Cassandra tableName:":{"name":"Cassandra tableName:","displayName":"Cassandra tableName:","type":"input","defaultValue":"airlineref","hidden":false,"$$hashKey":"object:3890"}}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nExternal table named AirlineCode registered.\n\n====== Schema Inferred for AirlineCode ======\nroot\n |-- code: string (nullable = true)\n |-- description: string (nullable = true)\n\n====== Schema for AirlineCode ======\n"}]},"apps":[],"jobName":"paragraph_1527105250378_1272085679","id":"20180523-001031_1009080999","dateCreated":"2018-05-23T19:54:10+0000","dateStarted":"2018-05-26T03:05:17+0000","dateFinished":"2018-05-26T03:05:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3658"},{"title":"STEP 2: Lets take a look at some sample data","text":"%snappydata\n{\nimport org.apache.spark.sql.SnappySession\n\nval ss = new SnappySession(snc.sparkContext)\nval datasetName = z.get(\"datasetName\")\nval host = z.get(\"host\")\n\nss.sql(s\"set spark.cassandra.connection.host=$host\")\nval DF = ss.table(s\"$datasetName\").limit(10)\nz.show(DF)\n}","user":"anonymous","dateUpdated":"2018-05-26T03:05:26+0000","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"code\tdescription\nCHF\tHammonds Commuter Air Serv.\n2U\tValley Air Express Inc.\nAFQ\tAero B Venezuela C.A.\nCRE\tCaribbean Express Inc.\nAED\tAir East Of Delaware Inc.\nKL\tKlm Royal Dutch Airlines\nSOA\tMall Airways Inc.\nVQ\tVintage Props & Jets Inc.\nVP\tViacao Aerea Sao Paulo\nCPT\tCapitol Air\n"}]},"apps":[],"jobName":"paragraph_1527105250378_1272085679","id":"20180523-010008_189512033","dateCreated":"2018-05-23T19:54:10+0000","dateStarted":"2018-05-26T03:05:26+0000","dateFinished":"2018-05-26T03:05:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3659"},{"title":"STEP 3: Cache the data in SnappyData Row Or Column table","text":"%snappydata\n{\nimport org.apache.spark.sql.SnappySession\n\nval ss = new SnappySession(snc.sparkContext)\n\nval datasetName = z.get(\"datasetName\")\nval tabName = datasetName+ \"_cache\"\nval host = z.get(\"host\")\n\nss.sql(s\"set spark.cassandra.connection.host=$host\")\n\nss.sql(s\"drop table if exists $tabName\")\nss.sql(s\"create table $tabName using row as (select * from $datasetName)\" )\n\nprintln(s\"Created table named $tabName\")\nprintln(\"With row count = \" + ss.table(s\"$tabName\").count )\n}","user":"anonymous","dateUpdated":"2018-05-24T07:18:40+0000","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1527105250378_1272085679","id":"20180523-195027_1337409592","dateCreated":"2018-05-23T19:54:10+0000","dateStarted":"2018-05-24T06:01:20+0000","dateFinished":"2018-05-24T06:01:27+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3660"},{"text":"%snappydata\nprintln(\"%html <h3> Example programs to load data into Cassandra, etc </h3>\")","user":"anonymous","dateUpdated":"2018-05-23T21:19:01+0000","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1527105250378_1272085679","id":"20180523-195125_169829401","dateCreated":"2018-05-23T19:54:10+0000","dateStarted":"2018-05-23T21:18:59+0000","dateFinished":"2018-05-23T21:18:59+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3661"},{"title":"Load some data into Cassandra table (normally occurs from external app)","text":"%snappydata\nimport org.apache.spark.sql.SnappySession\nimport com.datastax.spark.connector._\n\nval ss = new SnappySession(snc.sparkContext)\nss.setCassandraConf(\"Cluster1\", CassandraConnectorConf.ConnectionHostParam.option(\"cassandra\"))\nval df = ss.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").csv(\"s3a://AKIAILHSQ3FINHV473RQ:Tnn6GOHhjaayIRtVNApYQgNLU3FxXkw9albr9hVJ@zeppelindemo/airportdata_csv\")\ndf.printSchema\n\n/***\nss.sqlContext.setConf(\"spark.cassandra.connection.host\", \"cassandra\")\ndf.createCassandraTable( \"test\", \"airlineRef\", partitionKeyColumns = Some(Seq(\"Code\")) )\n***/\n\nval df1 = df.withColumnRenamed(\"Code\", \"code\").withColumnRenamed(\"Description\", \"description\")\n//df1.write.format(\"org.apache.spark.sql.cassandra\").options(Map( \"table\" -> \"airlineref\", \"keyspace\" -> \"test\", \"cluster\" -> \"Cluster1\" )).save\n","user":"anonymous","dateUpdated":"2018-05-23T20:42:40+0000","config":{"tableHide":true,"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1527105250379_1271700931","id":"20180522-045532_997274882","dateCreated":"2018-05-23T19:54:10+0000","dateStarted":"2018-05-23T20:42:30+0000","dateFinished":"2018-05-23T20:42:37+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3662"},{"text":"%snappydata.sql\n","user":"anonymous","dateUpdated":"2018-05-23T20:43:06+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1527108186732_-1164930299","id":"20180523-204306_1374393823","dateCreated":"2018-05-23T20:43:06+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3663"}],"name":"/data-sources/cassandra","id":"2DF6AE527","angularObjects":{"2DFGHWXPN:shared_process":[],"2DEYD8B19:shared_process":[],"2DGDSJ1D5:shared_process":[],"2DG34J3Y6:shared_process":[],"2DDNFQDB7:shared_process":[],"2DFA98JQC:shared_process":[],"2DE61EQZN:shared_process":[],"2DFGBUBZ5:shared_process":[],"2DF4X3Y2C:shared_process":[],"2DFM5YCUE:existing_process":[],"2DGV2TNAM:shared_process":[],"2DHDSBT82:shared_process":[],"2DFD9J9HT:shared_process":[],"2DDFBQDPJ:shared_process":[],"2DFDVMJMR:shared_process":[],"2DFTVSKZM:shared_process":[],"2DDKZT2J3:shared_process":[],"2DFVEZS66:shared_process":[],"2DEUTJ3HW:shared_process":[],"2DDTTN674:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}