{"paragraphs":[{"text":"%snappydata\n\nprintln(\"%html <h3> Specify Dataset name(registered as External table), mandatory config - URI, Database, Collection to read from </h3>\")\nprintln(\"%html <h4> <a href='https://docs.mongodb.com/spark-connector/current/configuration/' target='_blank'>Read description of all config options</a> </h4>\")\n","user":"anonymous","dateUpdated":"2018-05-29T18:28:07+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3> Specify Dataset name(registered as External table), mandatory config - URI, Database, Collection to read from </h3>\n"},{"type":"HTML","data":"<h4> <a href='https://docs.mongodb.com/spark-connector/current/configuration/' target='_blank'>Read description of all config options</a> </h4>\n"}]},"apps":[],"jobName":"paragraph_1527036787428_1812153372","id":"20180523-005307_463881908","dateCreated":"2018-05-23T00:53:07+0000","dateStarted":"2018-05-29T18:28:07+0000","dateFinished":"2018-05-29T18:28:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4886"},{"title":"STEP 1: Register the dataset using below MongoDB access options","text":"%snappydata\n\n// this curly brackets around block of code prevents all the REPL output from being displayed ...\n{\nval datasetName = z.input(\"Name the dataset being created:\", \"AirlineRef2\").asInstanceOf[String]\nval uri = z.input(\"URI:\", \"\")\nval database = z.input(\"Database:\", \"testdb\")\nval collection = z.input(\"Collection:\", \"airlineRef\")\nval sampleSize = z.input(\"Sample size (schema inference):\", \"1000\")\nval partitioner = z.input(\"Partitioner:\", \"MongoDefaultPartitioner\")\n//TODO: Several other important options to be added later ....\n\nz.put(\"datasetName\", datasetName)\nval ss = new org.apache.spark.sql.SnappySession(snc.sparkContext)\n\nss.sql(s\"drop table if exists $datasetName\")\n//println(s\"create DDL: create external table $datasetName using com.mongodb.spark.sql options (uri '$uri', database '$database', collection '$collection')\")\nss.sql(s\"create external table $datasetName using com.mongodb.spark.sql options (uri '$uri', database '$database', collection '$collection')\")\n\nprintln\nprintln(s\"External table named $datasetName registered.\")\nprintln\nprintln(s\"====== Schema for $datasetName ======\")\nss.table(datasetName).printSchema\nprintln(s\"====== Schema for $datasetName ======\")\n\n}\n","user":"anonymous","dateUpdated":"2018-05-29T18:27:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","title":true,"editorHide":true,"tableHide":false},"settings":{"params":{"Name the dataset being created:":"AirlineRef","URI:":"mongodb://mongodb-mongodb","Database:":"testdb","Collection:":"airlineRef","Sample size (schema inference):":"1000","Partitioner:":"MongoDefaultPartitioner"},"forms":{"Name the dataset being created:":{"name":"Name the dataset being created:","displayName":"Name the dataset being created:","type":"input","defaultValue":"AirlineRef2","hidden":false,"$$hashKey":"object:5099"},"URI:":{"name":"URI:","displayName":"URI:","type":"input","defaultValue":"","hidden":false,"$$hashKey":"object:5100"},"Database:":{"name":"Database:","displayName":"Database:","type":"input","defaultValue":"testdb","hidden":false,"$$hashKey":"object:5101"},"Collection:":{"name":"Collection:","displayName":"Collection:","type":"input","defaultValue":"airlineRef","hidden":false,"$$hashKey":"object:5102"},"Sample size (schema inference):":{"name":"Sample size (schema inference):","displayName":"Sample size (schema inference):","type":"input","defaultValue":"1000","hidden":false,"$$hashKey":"object:5103"},"Partitioner:":{"name":"Partitioner:","displayName":"Partitioner:","type":"input","defaultValue":"MongoDefaultPartitioner","hidden":false,"$$hashKey":"object:5104"}}},"apps":[],"jobName":"paragraph_1527034231586_612275916","id":"20180523-001031_1009080999","dateCreated":"2018-05-23T00:10:31+0000","dateStarted":"2018-05-29T18:27:35+0000","dateFinished":"2018-05-29T18:27:36+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4887"},{"title":"STEP 2: Lets take a look at some sample data","text":"%snappydata\n\nval df = snc.table(\"airlineRef\").limit(50)\nz.show(df)\n","user":"anonymous","dateUpdated":"2018-05-29T18:27:44+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","title":true,"editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1527037208477_1156574063","id":"20180523-010008_189512033","dateCreated":"2018-05-23T01:00:08+0000","dateStarted":"2018-05-29T18:27:44+0000","dateFinished":"2018-05-29T18:27:45+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4888"},{"title":"STEP 3: Cache the data in SnappyData Column/Row table","text":"%snappydata\n{\nimport org.apache.spark.sql.SnappySession\n\nval ss = new SnappySession(snc.sparkContext)\n\nval datasetName = z.get(\"datasetName\")\nval tabName = datasetName+ \"_cache\"\n\nval tableType = z.input(\"SnappyData Table type\", \"column\")\n\nss.sql(s\"drop table if exists $tabName\")\n//ss.sql(s\"create table $tabName using row as (select * from $datasetName)\" )\nss.sql(s\"create table $tabName using $tableType as (select code, description from $datasetName)\" )\n\nprintln(s\"Created table named $tabName\")\nprintln(\"With row count = \" + ss.table(s\"$tabName\").count )\n}","user":"anonymous","dateUpdated":"2018-05-29T18:27:56+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","title":true,"editorHide":true},"settings":{"params":{"SnappyData Table type":"row"},"forms":{"SnappyData Table type":{"name":"SnappyData Table type","displayName":"SnappyData Table type","type":"input","defaultValue":"column","hidden":false,"$$hashKey":"object:5197"}}},"apps":[],"jobName":"paragraph_1527105027814_1002443454","id":"20180523-195027_1337409592","dateCreated":"2018-05-23T19:50:27+0000","dateStarted":"2018-05-29T18:27:56+0000","dateFinished":"2018-05-29T18:27:58+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4889"},{"text":"%snappydata\nprintln(\"%html <h3> Example programs to load data into Mongo, etc </h3>\")","user":"anonymous","dateUpdated":"2018-05-23T19:52:59+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1527105085912_-1210724164","id":"20180523-195125_169829401","dateCreated":"2018-05-23T19:51:25+0000","dateStarted":"2018-05-23T19:52:16+0000","dateFinished":"2018-05-23T19:52:16+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4890"},{"title":"Load some data into mongo table (normally occurs from external app)","text":"%snappydata\nimport com.mongodb.spark._\nimport org.apache.spark.sql.SnappySession\n\nval ss = new SnappySession(snc.sparkContext)\nval df = ss.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").csv(\"s3a://AKIAILHSQ3FINHV473RQ:Tnn6GOHhjaayIRtVNApYQgNLU3FxXkw9albr9hVJ@zeppelindemo/airportdata_csv\")\ndf.printSchema\n\ndf.write.format(\"com.mongodb.spark.sql\").option(\"uri\", \"mongodb://mongodb-mongodb\").option(\"database\",\"testdb\").option(\"collection\",\"airlineRef\").save\n","user":"anonymous","dateUpdated":"2018-05-23T19:52:23+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","title":true,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1526964932016_-578589142","id":"20180522-045532_997274882","dateCreated":"2018-05-22T04:55:32+0000","dateStarted":"2018-05-22T18:50:34+0000","dateFinished":"2018-05-22T18:50:54+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4891"},{"text":"%snappydata\n","user":"anonymous","dateUpdated":"2018-05-29T18:26:53+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1527618413676_-524217094","id":"20180529-182653_1393497555","dateCreated":"2018-05-29T18:26:53+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4892"}],"name":"/data-sources/mongodb","id":"2DGFBUMU2","angularObjects":{"2DFGHWXPN:shared_process":[],"2DEYD8B19:shared_process":[],"2DGDSJ1D5:shared_process":[],"2DG34J3Y6:shared_process":[],"2DDNFQDB7:shared_process":[],"2DFA98JQC:shared_process":[],"2DE61EQZN:shared_process":[],"2DFGBUBZ5:shared_process":[],"2DF4X3Y2C:shared_process":[],"2DFM5YCUE:existing_process":[],"2DGV2TNAM:shared_process":[],"2DHDSBT82:shared_process":[],"2DFD9J9HT:shared_process":[],"2DDFBQDPJ:shared_process":[],"2DFDVMJMR:shared_process":[],"2DFTVSKZM:shared_process":[],"2DDKZT2J3:shared_process":[],"2DFVEZS66:shared_process":[],"2DEUTJ3HW:shared_process":[],"2DDTTN674:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}