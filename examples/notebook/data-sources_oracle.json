{"paragraphs":[{"title":"STEP I: Register the dataset using below Oracle access options","text":"%snappydata\n{\nval datasetName = z.input(\"Enter Name for the Dataset:\", \"AirlineRef\").asInstanceOf[String]\nval url = z.input(\"Enter JDBC URL for Oracle:\", \"jdbc:oracle:thin:@localhost:1521:xe\")\n//val database = z.input(\"Enter Database Name:\", \"\").asInstanceOf[String]\nval oracleTable = z.input(\"Enter Table Name:\", \"AirlineDataWithRowID\")\nval user = z.input(\"Enter User:\", \"system\")\nval password = z.input(\"Enter Password:\", \"oracle\")\nz.put(\"oracleTable\", oracleTable)\nz.put(\"datasetName\", datasetName)\nz.put(\"url\",url)\nz.put(\"user\" ,user)\nz.put(\"password\",password)\n\nvar connectionString =s\"create external table $datasetName using JDBC options (url '$url', dbtable '$oracleTable', user '$user', password '$password', driver 'oracle.jdbc.driver.OracleDriver'\"\nz.put(\"connectionString\",connectionString)\n}","user":"anonymous","dateUpdated":"2018-10-12T15:09:00+0530","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","title":true},"settings":{"params":{"Enter Name for the Dataset:":"AirlineRef","Enter JDBC URL for Oracle:":"jdbc:oracle:thin:@192.168.1.78:1521:ee","Enter Database Name:":"","Enter Table Name:":"employee","Enter User:":"system","Enter Password:":"oracle"},"forms":{"Enter Name for the Dataset:":{"name":"Enter Name for the Dataset:","displayName":"Enter Name for the Dataset:","type":"input","defaultValue":"AirlineRef","hidden":false,"$$hashKey":"object:12107"},"Enter JDBC URL for Oracle:":{"name":"Enter JDBC URL for Oracle:","displayName":"Enter JDBC URL for Oracle:","type":"input","defaultValue":"jdbc:oracle:thin:@localhost:1521:xe","hidden":false,"$$hashKey":"object:12108"},"Enter Table Name:":{"name":"Enter Table Name:","displayName":"Enter Table Name:","type":"input","defaultValue":"AirlineDataWithRowID","hidden":false,"$$hashKey":"object:12109"},"Enter User:":{"name":"Enter User:","displayName":"Enter User:","type":"input","defaultValue":"system","hidden":false,"$$hashKey":"object:12110"},"Enter Password:":{"name":"Enter Password:","displayName":"Enter Password:","type":"input","defaultValue":"oracle","hidden":false,"$$hashKey":"object:12111"}}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1538976479822_-1278124446","id":"20181008-105759_210829002","dateCreated":"2018-10-08T10:57:59+0530","dateStarted":"2018-10-12T15:09:00+0530","dateFinished":"2018-10-12T15:09:00+0530","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11988"},{"title":"STEP II: Enter additional parameters here...","text":"%snappydata\n{  \nvar flag:Boolean=false\nvar key:String=\" \"\nvar value:String=\" \"\nvar map1:Map[String,String] = Map()\nval datasetName =z.get(\"datasetName\").asInstanceOf[String]\nval oracleTable=z.get(\"oracleTable\").asInstanceOf[String]\nval user=z.get(\"user\").asInstanceOf[String]\nval password=z.get(\"password\").asInstanceOf[String]\n//val urlWithDB=z.get(\"urlWithDB\").asInstanceOf[String]\nval url=z.get(\"url\").asInstanceOf[String]\nval ss = new org.apache.spark.sql.SnappySession(snc.sparkContext)\nval parameterString = z.input(\"Enter optional parameters in the form of <key>=<value> separated by comma (,)\", \"\").asInstanceOf[String]\n\nif(parameterString != \"\"){\nfor (returnValue <- parameterString.split(\",\"))\n{\n  for(ret <- returnValue.split(\"=\"))\n    {\n      if(flag==false)\n      {\n        key=ret\n        \n        flag=true\n      }\n      else\n      {\n        value=ret\n        flag=false\n       }\n    }\n map1 += key -> value\n }\n    var stringToConcat = \"\"\n    map1.keys.foreach{ j =>\n    var temp=j\n    var temp2=map1(j)\n     stringToConcat += \",\"+temp+\" \"+\"'\"+temp2+\"'\"\n    }\n     \n\nss.sql(s\"drop table if exists $datasetName\")\n\nval connectionString=z.get(\"connectionString\").asInstanceOf[String]\nval connectionString2=connectionString.concat(stringToConcat)\nval finalConnectionString=connectionString2.concat(\")\")\nss.sql(finalConnectionString)\n\n}\nelse{\n println(\"No extra parameters added.\")\n ss.sql(s\"drop table if exists $datasetName\")\n ss.sql(s\"create external table $datasetName using JDBC options (url '$url', dbtable '$oracleTable', user '$user', password '$password', driver 'oracle.jdbc.driver.OracleDriver')\")\n}\nprintln\nprintln(s\"External table named $datasetName registered.\")\nprintln(s\"====== Schema for $datasetName ======\")\nss.table(datasetName).printSchema\n}\n\n\n","user":"anonymous","dateUpdated":"2018-10-12T15:09:20+0530","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","title":true},"settings":{"params":{"Enter optional parameters in the form of <key>=<value> separated by comma (,)":""},"forms":{"Enter optional parameters in the form of <key>=<value> separated by comma (,)":{"name":"Enter optional parameters in the form of <key>=<value> separated by comma (,)","displayName":"Enter optional parameters in the form of <key>=<value> separated by comma (,)","type":"input","defaultValue":"","hidden":false,"$$hashKey":"object:12180"}}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"No extra parameters added.\n\nExternal table named AirlineRef registered.\n====== Schema for AirlineRef ======\nroot\n |-- EMPNAME: string (nullable = true)\n |-- SALARY: decimal(8,0) (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1538976487100_-1250022452","id":"20181008-105807_769001397","dateCreated":"2018-10-08T10:58:07+0530","dateStarted":"2018-10-12T15:09:20+0530","dateFinished":"2018-10-12T15:09:23+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:11989"},{"title":"STEP III: Lets take a look at some sample data","text":"%snappydata\nprintln(s\"\"\"%html\n<p>Records from the dataset Created</p>\"\"\")\nval dfm=z.get(\"datasetName\").asInstanceOf[String]\nval dfs = snc.table(dfm)\nz.show(dfs)","user":"anonymous","dateUpdated":"2018-10-12T15:08:10+0530","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Records from the dataset Created</p>\ndfm: String = AirlineRef\ndfs: org.apache.spark.sql.DataFrame = [EMPNAME: string, SALARY: decimal(8,0)]\n"},{"type":"TABLE","data":"EMPNAME\tSALARY\n"}]},"apps":[],"jobName":"paragraph_1538981755736_-29863861","id":"20181008-122555_661899821","dateCreated":"2018-10-08T12:25:55+0530","dateStarted":"2018-10-12T15:08:10+0530","dateFinished":"2018-10-12T15:08:12+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:11990"},{"text":"%snappydata\n","user":"anonymous","dateUpdated":"2018-10-12T15:08:10+0530","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1539337090611_-421688826","id":"20181012-150810_1164551875","dateCreated":"2018-10-12T15:08:10+0530","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:11991"}],"name":"data-sources/oracle","id":"2DUYK1PCG","angularObjects":{"2DVCCD1HB:shared_process":[],"2DUWTCRCE:shared_process":[],"2DSJVNUZ4:shared_process":[],"2DRTGSZDH:shared_process":[],"2DTSY8F4K:existing_process":[],"2DUG15QFX:shared_process":[],"2DT1MSVXR:shared_process":[],"2DTZU52BJ:shared_process":[],"2DUDZ18JN:shared_process":[],"2DRUE5Y7F:shared_process":[],"2DTW97ZMS:shared_process":[],"2DV8HEQ23:shared_process":[],"2DRZEUU18:shared_process":[],"2DUYZKKZQ:shared_process":[],"2DV9PT6SU:shared_process":[],"2DUYQS9YB:shared_process":[],"2DSY63EG8:shared_process":[],"2DSM33QMM:shared_process":[],"2DV48T9P4:shared_process":[],"2DUGW2ZFP:shared_process":[],"2DRE2WNK1:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}